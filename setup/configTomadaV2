#!/bin/bash

pwd=$(dirname $BASH_SOURCE)

wlan=$(iwconfig 2>&1 | grep SSID | awk '{print $1}')


stopWifi(){
#	if [ "$(sudo netctl is-active wlp0s26f7u1.static | grep ^active)" == "" ] ; then 
#	        sudo netctl start wlp0s26f7u1.static
#        fi
        sudo netctl stop  tomato
        sudo netctl start wlp0s26f7u1-0K_SP3
}
startWifi(){
        sudo netctl stop  wlp0s26f7u1-0K_SP3 || true
        sudo netctl start  tomato
}


startWifi2(){
#	sudo cp ./WIFI.atomoVivo /etc/netctl/
#	sudo netctl start WIFI.atomoVivo
#	sudo netctl start wlp0s26f7u1.static
#	sudo systemctl start hostapd.service 
echo
}
stopWifi2(){
	sudo systemctl stop hostapd.service 
	sudo netctl stop WIFI.atomoVivo
	sudo netctl stop WIFI.atomo
	sudo netctl stop wlp0s26f7u1.static
	ifconfig | grep '^w' | awk -F':' '{print $1}' | while read n ; do sudo ifconfig $n 0.0.0.0 down ; done
#	sudo pkill -fc -9 dhcpcd.*wlp0s26f7u 1>/dev/null
#	sudo rm -rf  /run/dhcpcd-wlp0s26f7u* 1>/dev/null
}


setup2(){
	sudo cp 0K_SP3_v1  /etc/netctl/wlp0s26f7u1-0K_SP3
	sudo netctl start wlp0s26f7u1-0K_SP3 || ( sudo cp 0K_SP3_v2  /etc/netctl/wlp0s26f7u1-0K_SP3 ; sudo netctl start wlp0s26f7u1-0K_SP3 || ( echo "ERROR: No 0K_SP3 wifi found!" ; exit ) )
	while [ "$ip" == "" ] ; do
		echo waiting for kankun network...
		ip=$(ifconfig "$(iwconfig  2>&1 | grep IEE | awk '{print $1}')" | grep inet | awk '{print $2}' | awk -F'.' '{print $1"."$2"."$3".253"}')
	done

	# connected to 0K_SP3
	echo .
        echo "Senha e' p9z34c"
        echo .
	# config startup, webserver and cgi
	$pwd/configTomadaJaNoWifi $ip
	# configure wifi
	$pwd/configTomadaWifi $ip
	# finish connected to the plug
	ssh root@$ip
}

setup(){
	wifi=$2
	ip=$1

	[ "$wifi" == "" ] && wifi=tomato

	sudo cp 0K_SP3_v1  /etc/netctl/wlp0s26f7u1-0K_SP3
	sudo netctl start wlp0s26f7u1-0K_SP3 || ( sudo cp 0K_SP3_v2  /etc/netctl/wlp0s26f7u1-0K_SP3 ; sudo netctl start wlp0s26f7u1-0K_SP3 || ( echo "ERROR: No 0K_SP3 wifi found!" ; exit ) )
	
	sleep 15
	iwconfig 2>&1 | grep ^w -A 4
	ifconfig 2>&1 | grep ^w -A7

        # subnet=192.168.145
	subnet=$(ifconfig | grep ^w -A7 | grep 'inet ' | awk  -F'.' '{print $2}')
	subnet=$(ifconfig | grep ^w -A7 | grep 'inet ' | awk '{print $2}' | awk  -F'.' '{print $1"."$2"."$3}')

        # use route to figure the kankun complete ip address
        # subnet=$(route -n | grep $(iwconfig 2>&1 | grep SSID | awk '{print $1}') | grep UG | awk '{print $2}' | grep -v 192.168.1.1)

	echo $subnet
	
	
	if [ "$subnet" != "" ] ; then
		sudo rm -rf $pwd/etc/config/network
		sudo rm -rf $pwd/rc.local.tmp

		echo scp -r $pwd/etc/dropbear root@$subnet.253:/etc/
		scp -r $pwd/etc/dropbear root@$subnet.253:/etc/

		network=$(ssh root@192.168.145.253 'cat /etc/config/network')

		echo "$network" > $pwd/kankun.network

		export ula=$(echo "$network" | grep ula | awk -F"'" '{print $(NF-1)}' | sed 's/\//\\\//g')
		echo "...$ula..."
		#[ "$ula" == "" ] && export ula="fda2:bd0f:a931::/48"
		#[ "$ula" == "" ] && export ula="fdc0:065e:d9b6::/48"
		cat $pwd/etc/config/network.template.dhcp | sed "s/20.0.0.100/$ip/" | sed "s/20.0.0.1/$ip/" | sed "s/192.168.10.253/${subnet}.253/" | sed "s/ULA/$ula/" | tee $pwd/etc/config/network.$wifi
		#sleep 1000

		echo ssh root@$subnet.253 ls -l /
		ssh root@$subnet.253 ls -l /
		ssh root@$subnet.253 cp /etc/config/network /etc/config/network.bak


		#scp -r $pwd/www/* root@192.168.10.253:/www/
		scp -r $pwd/etc/config/network.$wifi root@$subnet.253:/etc/config/network
		scp -r $pwd/etc/config/wireless.$wifi root@$subnet.253:/etc/config/wireless
		ssh root@$subnet.253 sync
		echo -e "\n\n REDE JA CONFIGURADA! \n\n"

		scp -r $pwd/www/* root@$subnet.253:/www/
		scp -r $pwd/www_cgi-bin/relay.cgi root@$subnet.253:/www/cgi-bin/
		scp -r $pwd/usr/sbin/uhttpd root@$subnet.253:/usr/sbin/
		#scp -r $pwd/root/* root@$subnet.253:/root/
		#scp -r $pwd/bin/* root@$subnet.253:/bin/

		#fix rc.local
		ssh root@$subnet.253 cat /etc/rc.local | \
			grep -v uhttpd | \
			sed 's/exit/\/usr\/sbin\/uhttpd -f -h \/www -r koven -x \/cgi-bin -t 60 -T 30 -k 20 -n 3 -N 100 -R -p 0.0.0.0:80 \&\nQUERY_STRING=on \/www\/cgi-bin\/relay.cgi\nexit /' > $pwd/rc.local.tmp

#			grep -v kkeps_ | \


		scp -r $pwd/rc.local.tmp root@$subnet.253:/etc/rc.local
		ssh root@$subnet.253 chmod a+x /etc/rc.local

		#if [ "$ip" == "" ] ; then 
		#	ssh root@$subnet.253 cp /etc/config/network.template.dhcp /etc/config/network
		#else
		#	ssh root@$subnet.253 cp /etc/config/network.$wifi /etc/config/network
		#fi
		#ssh root@$subnet.253 opkg install /root/avahi-daemon_0.6.31-6_ar71xx.ipk

		#ssh root@$subnet.253 "sh -c \"echo -e '0 0 * * *  /bin/reboot\n*/15 * * * *  /root/scripts/wifi\n\n' > /etc/crontabs/root ; crontab -l\""
		ssh root@$subnet.253 reboot 
	else
		echo -e "\n\nERROR: Cant find 0K_SP3 wifi. Reset a TOMADA! \n\n"
	fi
	sudo netctl stop  wlp0s26f7u1-0K_SP3
}



if [ "$1" = "" ] ; then
	echo -e "\n$(basename $0) - configura uma tomada KANKUN pros nossos WIFIs na Atomo.\n\n"
	#echo "	$(basename $0) atomoVivo -> seta a tomada pro atomoVivi wifi, usado ip dinamico"
	#echo "	$(basename $0) 192.168.1.101 -> seta a tomada pro atomoVivi wifi, com ip fixo 192.168.1.101"
	echo "	$(basename $0) -s		seta a tomada pro tomato wifi, com dhcp"
	echo "	$(basename $0) -t		conecta no tomato wifi"
	echo "	$(basename $0) -0		conecta no 0K_SP3_v1 wifi"
	echo "	$(basename $0) -l		list all visible wifi networks"
	echo "	$(basename $0) 			mostra esse help e lista os wifi visiveis"
	echo -e '\n\n'
	echo WIFI disponiveis:
	startWifi
	sudo iwlist $wlan scanning | grep ESS
	echo -e "\n\nWIFI Configs que podemos usar:\n"
	ls -1 $(dirname $(readlink -f $0))/WIFI.* | sed 's/WIFI.//g' | awk -F'/' '{print "\t"$(NF)}' | while read l ; do
		echo -e "\t$l"
	done
	echo -e "\n\n"
else
	if [ "$1" = "-t" ] ; then
		startWifi
	elif [ "$1" = "-0" ] ; then
		stopWifi
		echo .
		echo "Senha e' p9z34c"
		echo .
	elif [ "$1" = "-l" ] ; then
		startWifi
		sudo iwlist $wlan scanning | grep ESS
	else
		echo .
		echo "Senha e' p9z34c"
		echo .


		stopWifi
#		setup $1 $2
#		startWifi
		setup2

#		ifconfig 2>&1 | grep ^w -A7
		startWifi
	fi
fi
